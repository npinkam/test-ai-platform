{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport Layout from '../../../components/Layout';\nimport Chart from 'react-google-charts';\nimport axios from 'axios';\n\nfunction workloadChart(props) {\n  const today = new Date();\n  const todayStr = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate();\n\n  const timeStr = function (sec) {\n    return new Date(todayStr + ' ' + new Date(sec * 1000).toISOString().substr(11, 8)).toTimeString();\n  };\n\n  async function getData() {\n    // create a new XMLHttpRequest\n    const tableInfo = [{\n      type: 'string',\n      id: 'Station'\n    }, {\n      type: 'string',\n      id: 'dummy bar label'\n    }, {\n      type: 'string',\n      role: 'tooltip'\n    }, {\n      type: 'number',\n      id: 'Start'\n    }, {\n      type: 'number',\n      id: 'End'\n    }];\n    const response = await axios.get('http://localhost:1880/workloadraw');\n    const data = response.data;\n    /* for (let i = 0; i < data.length; i++) {\n      data[i][3] = timeStr(data[i][3])\n      data[i][4] = timeStr(data[i][4])\n    } */\n\n    data.unshift(tableInfo);\n    data.splice(5); //console.log(data)\n\n    return data;\n  } //getData()\n\n\n  return /*#__PURE__*/_jsx(Layout, {\n    children: /*#__PURE__*/_jsx(\"div\", {\n      children: /*#__PURE__*/_jsx(Chart, {\n        width: '100%',\n        height: '85vh',\n        chartType: \"Timeline\",\n        loader: /*#__PURE__*/_jsx(\"div\", {\n          children: \"Loading Workload Gantt Chart\"\n        }) //data={getData()}\n\n        /* data={[\n          [\n            { type: 'string', id: 'Station' },\n            { type: 'string', id: 'dummy bar label' },\n            { type: 'string', role: 'tooltip' },\n            { type: 'number', id: 'Start' },\n            { type: 'number', id: 'End' },\n          ],\n          [\n            'Packing(F4)',\n            '',\n            'task: Working<br/>productName: Product3_TypeA_B<br/>processName: Product3_TypeA_B<br/>index: 3<br/>part: 1<br/>duration: 00:04:00',\n            3390,\n            3630,\n          ],\n          [\n            'Packing(F4)',\n            '',\n            'task: Working<br/>productName: Product3_TypeA_B<br/>processName: Product3_TypeA_B<br/>index: 3<br/>part: 1<br/>duration: 00:04:00',\n            4350,\n            4590,\n          ],\n          [\n            'Packing(F4)',\n            '',\n            'task: Working<br/>productName: Product3_TypeA_B<br/>processName: Product3_TypeA_B<br/>index: 3<br/>part: 1<br/>duration: 00:04:00',\n            5310,\n            5550,\n          ],\n          [\n            'Packing(F4)',\n            '',\n            'task: Working<br/>productName: Product3_TypeA_B<br/>processName: Product3_TypeA_B<br/>index: 3<br/>part: 1<br/>duration: 00:04:00',\n            6270,\n            6510,\n          ],\n        ]} */\n        ,\n        options: {\n          height: 400,\n          timeline: {\n            colorByRowLabel: true\n          },\n          labelStyle: {\n            fontSize: 13\n          },\n          AllowHtml: true,\n          colors: ['#111e6c', '#1d2951', '#597387', '#003152', '#000080', '#0e4d92', '#1034a6', '#0080ff', '#0f52ba', '#008ecc', '#6593f5', '#4c516d', '#008081', '#73c2fb', '#7285a5', '#4f97a3', '#57a0d3', '#4682b4', '#81d8d0', '#89cff0', '#588bae', '#7ef9ff', '#95c8d8', '#b0dfe5', '#3fe0d0']\n        }\n      })\n    })\n  });\n}\n\nexport default workloadChart;","map":null,"metadata":{},"sourceType":"module"}