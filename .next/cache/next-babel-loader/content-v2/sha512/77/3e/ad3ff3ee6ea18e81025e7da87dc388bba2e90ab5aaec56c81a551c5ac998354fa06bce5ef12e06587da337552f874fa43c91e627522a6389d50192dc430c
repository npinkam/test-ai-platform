{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/Users/xeno/Documents/nextjs/nextjs-express-ts/src/pages/posts/workloadchart.tsx\";\nimport Layout from '../../../components/Layout';\nimport Chart from 'react-google-charts';\nimport axios from 'axios';\n\nfunction workloadChart(props) {\n  function getData() {\n    return _getData.apply(this, arguments);\n  }\n\n  function _getData() {\n    _getData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return axios.get('http://localhost:1880/workloadraw');\n\n            case 2:\n              response = _context.sent;\n              console.log(response.data);\n              return _context.abrupt(\"return\", response.data);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _getData.apply(this, arguments);\n  }\n\n  getData();\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Chart, {\n        width: '100%',\n        height: '85vh',\n        chartType: \"Timeline\",\n        loader: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Loading Workload Gantt Chart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 19\n        }, this),\n        data: [[{\n          type: 'string',\n          id: 'President'\n        }, {\n          type: 'date',\n          id: 'Start'\n        }, {\n          type: 'date',\n          id: 'End'\n        }], ['Washington', new Date(1789, 3, 30), new Date(1797, 2, 4)], ['Adams', new Date(1797, 2, 4), new Date(1801, 2, 4)], ['Jefferson', new Date(1801, 2, 4), new Date(1809, 2, 4)]]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}\n\nexport default workloadChart;","map":{"version":3,"sources":["/Users/xeno/Documents/nextjs/nextjs-express-ts/src/pages/posts/workloadchart.tsx"],"names":["Layout","Chart","axios","workloadChart","props","getData","get","response","console","log","data","type","id","Date"],"mappings":";;;;AAAA,OAAOA,MAAP,MAAmB,4BAAnB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAAA,WACbC,OADa;AAAA;AAAA;;AAAA;AAAA,wEAC5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEyBH,KAAK,CAACI,GAAN,CAAU,mCAAV,CAFzB;;AAAA;AAEQC,cAAAA,QAFR;AAGEC,cAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB;AAHF,+CAISH,QAAQ,CAACG,IAJlB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAD4B;AAAA;AAAA;;AAO5BL,EAAAA,OAAO;AACP,sBACE,QAAC,MAAD;AAAA,2BACE;AAAA,6BAGE,QAAC,KAAD;AACE,QAAA,KAAK,EAAE,MADT;AAEE,QAAA,MAAM,EAAE,MAFV;AAGE,QAAA,SAAS,EAAC,UAHZ;AAIE,QAAA,MAAM,eAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJV;AAKE,QAAA,IAAI,EAAE,CACJ,CACE;AAAEM,UAAAA,IAAI,EAAE,QAAR;AAAkBC,UAAAA,EAAE,EAAE;AAAtB,SADF,EAEE;AAAED,UAAAA,IAAI,EAAE,MAAR;AAAgBC,UAAAA,EAAE,EAAE;AAApB,SAFF,EAGE;AAAED,UAAAA,IAAI,EAAE,MAAR;AAAgBC,UAAAA,EAAE,EAAE;AAApB,SAHF,CADI,EAMJ,CAAC,YAAD,EAAe,IAAIC,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,EAAlB,CAAf,EAAsC,IAAIA,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,CAAlB,CAAtC,CANI,EAOJ,CAAC,OAAD,EAAU,IAAIA,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,CAAlB,CAAV,EAAgC,IAAIA,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,CAAlB,CAAhC,CAPI,EAQJ,CAAC,WAAD,EAAc,IAAIA,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,CAAlB,CAAd,EAAoC,IAAIA,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,CAAlB,CAApC,CARI;AALR;AAAA;AAAA;AAAA;AAAA;AAHF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAwBD;;AAED,eAAeV,aAAf","sourcesContent":["import Layout from '../../../components/Layout'\nimport Chart from 'react-google-charts'\nimport axios from 'axios'\n\nfunction workloadChart(props) {\n  async function getData() {\n    // create a new XMLHttpRequest\n    const response = await axios.get('http://localhost:1880/workloadraw')\n    console.log(response.data)\n    return response.data\n  }\n  getData()\n  return (\n    <Layout>\n      <div>\n        {/*         <h1>Workload Chart Page</h1>\n        <p>Show Workload Gantt Chart from GD.findi execution.</p> */}\n        <Chart\n          width={'100%'}\n          height={'85vh'}\n          chartType=\"Timeline\"\n          loader={<div>Loading Workload Gantt Chart</div>}\n          data={[\n            [\n              { type: 'string', id: 'President' },\n              { type: 'date', id: 'Start' },\n              { type: 'date', id: 'End' },\n            ],\n            ['Washington', new Date(1789, 3, 30), new Date(1797, 2, 4)],\n            ['Adams', new Date(1797, 2, 4), new Date(1801, 2, 4)],\n            ['Jefferson', new Date(1801, 2, 4), new Date(1809, 2, 4)],\n          ]}\n        ></Chart>\n      </div>\n    </Layout>\n  )\n}\n\nexport default workloadChart\n"]},"metadata":{},"sourceType":"module"}