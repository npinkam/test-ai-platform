{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/xeno/Documents/nextjs/nextjs-express-ts/src/pages/posts/workloadchart.tsx\";\nimport Layout from '../../../components/Layout';\nimport Chart from 'react-google-charts';\nimport axios from 'axios';\n\nfunction workloadChart(props) {\n  async function getData() {\n    // create a new XMLHttpRequest\n    const response = await axios.get('http://localhost:1880/workloadraw');\n    console.log(response.data);\n    return response.data;\n  }\n\n  getData();\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Chart, {\n        width: '100%',\n        height: '85vh',\n        chartType: \"Timeline\",\n        loader: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Loading Workload Gantt Chart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 19\n        }, this),\n        data: getData(),\n        options: {\n          height: 400,\n          timeline: {\n            colorByRowLabel: true\n          },\n          labelStyle: {\n            fontSize: 13\n          },\n          colors: ['#111e6c', '#1d2951', '#597387', '#003152', '#000080', '#0e4d92', '#1034a6', '#0080ff', '#0f52ba', '#008ecc', '#6593f5', '#4c516d', '#008081', '#73c2fb', '#7285a5', '#4f97a3', '#57a0d3', '#4682b4', '#81d8d0', '#89cff0', '#588bae', '#7ef9ff', '#95c8d8', '#b0dfe5', '#3fe0d0']\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}\n\nexport default workloadChart;","map":{"version":3,"sources":["/Users/xeno/Documents/nextjs/nextjs-express-ts/src/pages/posts/workloadchart.tsx"],"names":["Layout","Chart","axios","workloadChart","props","getData","response","get","console","log","data","height","timeline","colorByRowLabel","labelStyle","fontSize","colors"],"mappings":";;AAAA,OAAOA,MAAP,MAAmB,4BAAnB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC5B,iBAAeC,OAAf,GAAyB;AACvB;AACA,UAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAN,CAAU,mCAAV,CAAvB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,QAAQ,CAACI,IAArB;AACA,WAAOJ,QAAQ,CAACI,IAAhB;AACD;;AACDL,EAAAA,OAAO;AACP,sBACE,QAAC,MAAD;AAAA,2BACE;AAAA,6BAGE,QAAC,KAAD;AACE,QAAA,KAAK,EAAE,MADT;AAEE,QAAA,MAAM,EAAE,MAFV;AAGE,QAAA,SAAS,EAAC,UAHZ;AAIE,QAAA,MAAM,eAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJV;AAKE,QAAA,IAAI,EAAEA,OAAO,EALf;AAME,QAAA,OAAO,EAAE;AACPM,UAAAA,MAAM,EAAE,GADD;AAEPC,UAAAA,QAAQ,EAAE;AAAEC,YAAAA,eAAe,EAAE;AAAnB,WAFH;AAGPC,UAAAA,UAAU,EAAE;AACVC,YAAAA,QAAQ,EAAE;AADA,WAHL;AAMPC,UAAAA,MAAM,EAAE,CACN,SADM,EAEN,SAFM,EAGN,SAHM,EAIN,SAJM,EAKN,SALM,EAMN,SANM,EAON,SAPM,EAQN,SARM,EASN,SATM,EAUN,SAVM,EAWN,SAXM,EAYN,SAZM,EAaN,SAbM,EAcN,SAdM,EAeN,SAfM,EAgBN,SAhBM,EAiBN,SAjBM,EAkBN,SAlBM,EAmBN,SAnBM,EAoBN,SApBM,EAqBN,SArBM,EAsBN,SAtBM,EAuBN,SAvBM,EAwBN,SAxBM,EAyBN,SAzBM;AAND;AANX;AAAA;AAAA;AAAA;AAAA;AAHF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAiDD;;AAED,eAAeb,aAAf","sourcesContent":["import Layout from '../../../components/Layout'\nimport Chart from 'react-google-charts'\nimport axios from 'axios'\n\nfunction workloadChart(props) {\n  async function getData() {\n    // create a new XMLHttpRequest\n    const response = await axios.get('http://localhost:1880/workloadraw')\n    console.log(response.data)\n    return response.data\n  }\n  getData()\n  return (\n    <Layout>\n      <div>\n        {/*         <h1>Workload Chart Page</h1>\n        <p>Show Workload Gantt Chart from GD.findi execution.</p> */}\n        <Chart\n          width={'100%'}\n          height={'85vh'}\n          chartType=\"Timeline\"\n          loader={<div>Loading Workload Gantt Chart</div>}\n          data={getData()}\n          options={{\n            height: 400,\n            timeline: { colorByRowLabel: true },\n            labelStyle: {\n              fontSize: 13,\n            },\n            colors: [\n              '#111e6c',\n              '#1d2951',\n              '#597387',\n              '#003152',\n              '#000080',\n              '#0e4d92',\n              '#1034a6',\n              '#0080ff',\n              '#0f52ba',\n              '#008ecc',\n              '#6593f5',\n              '#4c516d',\n              '#008081',\n              '#73c2fb',\n              '#7285a5',\n              '#4f97a3',\n              '#57a0d3',\n              '#4682b4',\n              '#81d8d0',\n              '#89cff0',\n              '#588bae',\n              '#7ef9ff',\n              '#95c8d8',\n              '#b0dfe5',\n              '#3fe0d0',\n            ],\n          }}\n        ></Chart>\n      </div>\n    </Layout>\n  )\n}\n\nexport default workloadChart\n"]},"metadata":{},"sourceType":"module"}