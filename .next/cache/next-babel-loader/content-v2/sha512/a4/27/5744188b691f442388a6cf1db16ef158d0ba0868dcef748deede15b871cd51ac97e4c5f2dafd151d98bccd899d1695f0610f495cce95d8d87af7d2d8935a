{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/xeno/Documents/nextjs/nextjs-express-ts/src/pages/posts/workloadchart.tsx\";\nimport Layout from '../../../components/Layout';\nimport Chart from 'react-google-charts';\n\nfunction workloadChart(props) {\n  function getData() {\n    // create a new XMLHttpRequest\n    const xhr = new XMLHttpRequest(); // get a callback when the server responds\n\n    xhr.addEventListener('load', () => {\n      // update the state of the component with the result here\n      console.log(xhr.responseText);\n    }); // open the request with the verb and the url\n\n    xhr.open('GET', 'http://localhost:1880/workloadraw'); // send the request\n\n    xhr.send();\n    return JSON.parse(xhr.responseText);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Chart, {\n        width: '100%',\n        height: '85vh',\n        chartType: \"Timeline\",\n        loader: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Loading Workload Gantt Chart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 19\n        }, this),\n        data: getData()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n\nexport default workloadChart;","map":{"version":3,"sources":["/Users/xeno/Documents/nextjs/nextjs-express-ts/src/pages/posts/workloadchart.tsx"],"names":["Layout","Chart","workloadChart","props","getData","xhr","XMLHttpRequest","addEventListener","console","log","responseText","open","send","JSON","parse"],"mappings":";;AAAA,OAAOA,MAAP,MAAmB,4BAAnB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC5B,WAASC,OAAT,GAAmB;AACjB;AACA,UAAMC,GAAG,GAAG,IAAIC,cAAJ,EAAZ,CAFiB,CAIjB;;AACAD,IAAAA,GAAG,CAACE,gBAAJ,CAAqB,MAArB,EAA6B,MAAM;AACjC;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,GAAG,CAACK,YAAhB;AACD,KAHD,EALiB,CASjB;;AACAL,IAAAA,GAAG,CAACM,IAAJ,CAAS,KAAT,EAAgB,mCAAhB,EAViB,CAWjB;;AACAN,IAAAA,GAAG,CAACO,IAAJ;AAEA,WAAOC,IAAI,CAACC,KAAL,CAAWT,GAAG,CAACK,YAAf,CAAP;AACD;;AACD,sBACE,QAAC,MAAD;AAAA,2BACE;AAAA,6BAGE,QAAC,KAAD;AACE,QAAA,KAAK,EAAE,MADT;AAEE,QAAA,MAAM,EAAE,MAFV;AAGE,QAAA,SAAS,EAAC,UAHZ;AAIE,QAAA,MAAM,eAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJV;AAKE,QAAA,IAAI,EAAEN,OAAO;AALf;AAAA;AAAA;AAAA;AAAA;AAHF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAeD;;AAED,eAAeF,aAAf","sourcesContent":["import Layout from '../../../components/Layout'\nimport Chart from 'react-google-charts'\n\nfunction workloadChart(props) {\n  function getData() {\n    // create a new XMLHttpRequest\n    const xhr = new XMLHttpRequest()\n\n    // get a callback when the server responds\n    xhr.addEventListener('load', () => {\n      // update the state of the component with the result here\n      console.log(xhr.responseText)\n    })\n    // open the request with the verb and the url\n    xhr.open('GET', 'http://localhost:1880/workloadraw')\n    // send the request\n    xhr.send()\n\n    return JSON.parse(xhr.responseText)\n  }\n  return (\n    <Layout>\n      <div>\n        {/*         <h1>Workload Chart Page</h1>\n        <p>Show Workload Gantt Chart from GD.findi execution.</p> */}\n        <Chart\n          width={'100%'}\n          height={'85vh'}\n          chartType=\"Timeline\"\n          loader={<div>Loading Workload Gantt Chart</div>}\n          data={getData()}\n        ></Chart>\n      </div>\n    </Layout>\n  )\n}\n\nexport default workloadChart\n"]},"metadata":{},"sourceType":"module"}